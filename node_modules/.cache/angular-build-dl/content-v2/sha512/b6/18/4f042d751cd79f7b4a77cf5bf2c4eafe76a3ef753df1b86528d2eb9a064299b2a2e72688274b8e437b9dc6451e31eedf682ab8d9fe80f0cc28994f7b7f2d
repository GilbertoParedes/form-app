{"version":3,"sources":["webpack:///src/app/pages/dashboard/dashboard.page.html","webpack:///src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/pages/dashboard/dashboard.module.ts","webpack:///src/app/pages/dashboard/dashboard.page.scss","webpack:///src/app/pages/dashboard/dashboard.page.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/env.service.ts"],"names":["routes","path","component","DashboardPageRoutingModule","imports","forChild","exports","DashboardPageModule","declarations","DashboardPage","menu","authService","navCtrl","enable","user","subscribe","navigateForward","selector","template","AuthService","http","storage","env","isLoggedIn","email","password","headers","append","post","API_URL","pipe","token","setItem","then","console","log","error","fName","lName","get","data","remove","getItem","providedIn","EnvService"],"mappings":"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","file":"pages-dashboard-dashboard-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Dashboard</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div *ngIf=\\\"user != undefined\\\">\\n      Welcome {{ user[\\\"first_name\\\"]  }} {{ user[\\\"last_name\\\"]  }}\\n  </div>\\n  <ion-row>\\n    <ion-col>\\n      <ion-card>\\n        <!-- <ion-card-header>\\n          <ion-card-subtitle>Card Subtitle</ion-card-subtitle>\\n          <ion-card-title>Crea </ion-card-title>\\n        </ion-card-header> -->\\n        <ion-card-content>\\n          <ion-button color=\\\"primary\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"create()\\\">Nuevo Registro</ion-button>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n    <ion-col>\\n      <ion-card>\\n        <!-- <ion-card-header>\\n          <ion-card-subtitle>Card Subtitle</ion-card-subtitle>\\n          <ion-card-title>Card Title</ion-card-title>\\n        </ion-card-header> -->\\n        <ion-card-content>\\n          <ion-button color=\\\"primary\\\" expand=\\\"block\\\" color=\\\"warning\\\" (click)=\\\"register()\\\">Ver Lista</ion-button>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n\\n</ion-content>\\n<ion-tabs>\\n  <ion-tab-bar slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"schedule\\\">\\n      <ion-icon name=\\\"calendar\\\"></ion-icon>\\n      <ion-label>Schedule</ion-label>\\n      <ion-badge>6</ion-badge>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"speakers\\\">\\n      <ion-icon name=\\\"person-circle\\\"></ion-icon>\\n      <ion-label>Ver Lista</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"add\\\" expand=\\\"full\\\" color=\\\"primary\\\" (click)=\\\"create()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n      <ion-label>Nuevo registro</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n</ion-tabs>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\n\nimport { DashboardPage } from './dashboard.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { MenuController, NavController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { User } from 'src/app/models/user';\n// import { UserPage } from '../user/user.page';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n\n  user: User;\n\n  constructor(\n    private menu: MenuController,\n    private authService: AuthService,\n    private navCtrl: NavController\n  ) { \n    this.menu.enable(true);\n   }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.authService.user().subscribe(\n      user => {\n        this.user = user;\n      }\n    );\n  }\n\n  create() {\n     this.navCtrl.navigateForward('user');\n  }\n\n  listUSer(){\n    // this.navCtrl.navigateForward('');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { EnvService } from './env.service';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn = false;\n  token:any;\n  constructor(\n    private http: HttpClient,\n    private storage: NativeStorage,\n    private env: EnvService,\n  ) { }\n  login(email: String, password: String) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n\n    return this.http.post(this.env.API_URL + 'api/auth/login',\n      {email: email, password: password}, { headers: headers }\n    ).pipe(\n      tap(token => {\n        this.storage.setItem('token', token)\n        .then(\n          () => {\n            console.log('Token Stored');\n          },\n          error => console.error('Error storing item', error)\n        );\n        this.token = token;\n        this.isLoggedIn = true;\n        return token;\n      }),\n    );\n  }\n  register(fName: String, lName: String, email: String, password: String) {\n    return this.http.post(this.env.API_URL + 'api/auth/register',\n      {fName: fName, lName: lName, email: email, password: password}\n    )\n  }\n  logout() {\n    const headers = new HttpHeaders({\n      'Authorization': this.token[\"token_type\"]+\" \"+this.token[\"access_token\"]\n    });\n    return this.http.get(this.env.API_URL + 'api/auth/logout', { headers: headers })\n    .pipe(\n      tap(data => {\n        this.storage.remove(\"token\");\n        this.isLoggedIn = false;\n        delete this.token;\n        return data;\n      })\n    )\n  }\n  user() {\n    const headers = new HttpHeaders({\n      'Authorization': this.token[\"token_type\"]+\" \"+this.token[\"access_token\"]\n    });\n    return this.http.get<User>(this.env.API_URL + 'api/auth/user', { headers: headers })\n    .pipe(\n      tap(user => {\n        return user;\n      })\n    )\n  }\n  getToken() {\n    return this.storage.getItem('token').then(\n      data => {\n        this.token = data;\n        if(this.token != null) {\n          this.isLoggedIn=true;\n        } else {\n          this.isLoggedIn=false;\n        }\n      },\n      error => {\n        this.token = null;\n        this.isLoggedIn=false;\n      }\n    );\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvService {\n  API_URL = 'http://apiform.test/';\n  \n  constructor() { }\n}\n"]}