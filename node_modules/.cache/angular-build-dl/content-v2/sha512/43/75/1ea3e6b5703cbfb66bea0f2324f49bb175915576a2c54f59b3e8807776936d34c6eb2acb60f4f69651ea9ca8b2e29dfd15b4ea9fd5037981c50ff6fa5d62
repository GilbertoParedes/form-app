{"version":3,"sources":["webpack:///src/app/pages/auth/login/login.page.html","webpack:///src/app/pages/auth/register/register.page.html","webpack:///src/app/pages/auth/login/login.page.scss","webpack:///src/app/pages/auth/login/login.page.ts","webpack:///src/app/pages/auth/register/register.page.scss","webpack:///src/app/pages/auth/register/register.page.ts","webpack:///src/app/services/alert.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/env.service.ts"],"names":["LoginPage","modalController","authService","navCtrl","alertService","dismiss","dismissLogin","create","component","registerModal","present","form","login","value","email","password","subscribe","data","presentToast","error","console","log","navigateRoot","selector","template","RegisterPage","dismissRegister","loginModal","register","fName","lName","AlertService","toastController","message","duration","position","color","toast","providedIn","AuthService","http","storage","env","isLoggedIn","post","API_URL","pipe","token","setItem","then","headers","get","remove","user","getItem","EnvService"],"mappings":"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","file":"default~pages-auth-login-login-module~pages-auth-register-register-module~pages-landing-landing-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button color=\\\"light\\\" (click)=\\\"dismissLogin()\\\">Close</ion-button>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login(form)\\\" method=\\\"post\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input ngModel type=\\\"email\\\" name=\\\"email\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input ngModel type=\\\"password\\\" name=\\\"password\\\"></ion-input>\\n    </ion-item>\\n  \\n    <p text-right>Forgot Password?</p>\\n  \\n    <ion-button type=\\\"submit\\\" expand=\\\"full\\\" color=\\\"primary\\\">Login</ion-button>\\n  </form>\\n  <p text-center>Don't have a account?</p>\\n  <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"registerModal()\\\">Register</ion-button>\\n</ion-content>\\n\\n<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content> -->\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button color=\\\"light\\\" (click)=\\\"dismissRegister()\\\">Close</ion-button>\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"register(form)\\\" method=\\\"post\\\">\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Nombre</ion-label>\\n        <ion-input ngModel name=\\\"fName\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Apellido</ion-label>\\n      <ion-input ngModel name=\\\"lName\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" ngModel name=\\\"email\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" ngModel name=\\\"password\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-button type=\\\"submit\\\" expand=\\\"full\\\" color=\\\"danger\\\">Register</ion-button>\\n  </form>\\n  <p text-center>Already have a account?</p>\\n  <ion-button expand=\\\"full\\\" color=\\\"primary\\\" (click)=\\\"loginModal()\\\">Login</ion-button>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { RegisterPage } from '../register/register.page';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertService } from 'src/app/services/alert.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(\n    private modalController: ModalController,\n    private authService: AuthService,\n    private navCtrl: NavController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // Descartar el modal de login\n  dismissLogin() {\n    this.modalController.dismiss();\n  }\n\n  //\n  async registerModal(){\n    this.dismissLogin();\n    const registerModal = await this.modalController.create({\n      component: RegisterPage\n    });\n    return await registerModal.present();\n  }\n\n  login(form: NgForm) {\n    this.authService.login(form.value.email, form.value.password).subscribe(\n      data => {\n        this.alertService.presentToast(\"Sesión Iniciada\");\n      },\n      error => {\n        console.log(error);\n        this.alertService.presentToast(error);\n      },\n      () => {\n        this.dismissLogin();\n        this.navCtrl.navigateRoot('/dashboard');\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { LoginPage } from '../login/login.page';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  constructor(\n    private modalController: ModalController,\n    private authService: AuthService,\n    private navCtrl: NavController,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // Dismiss Register Modal\n  dismissRegister() {\n    this.modalController.dismiss();\n  }\n  // On Login button tap, dismiss Register modal and open login Modal\n  async loginModal() {\n    this.dismissRegister();\n    const loginModal = await this.modalController.create({\n      component: LoginPage,\n    });\n    return await loginModal.present();\n  }\n  register(form: NgForm) {\n    this.authService.register(form.value.fName, form.value.lName, form.value.email, form.value.password).subscribe(\n      data => {\n        this.authService.login(form.value.email, form.value.password).subscribe(\n          data => {\n          },\n          error => {\n            console.log(error);\n          },\n          () => {\n            this.dismissRegister();\n            this.navCtrl.navigateRoot('/dashboard');\n          }\n        );\n        this.alertService.presentToast(data['message']);\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        \n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private toastController: ToastController) { }\n\n  async presentToast(message: any) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n      position: 'top',\n      color: 'dark'\n    });\n    toast.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { EnvService } from './env.service';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn = false;\n  token:any;\n  constructor(\n    private http: HttpClient,\n    private storage: NativeStorage,\n    private env: EnvService,\n  ) { }\n  login(email: String, password: String) {\n    return this.http.post(this.env.API_URL + 'api/auth/login',\n      {email: email, password: password}\n    ).pipe(\n      tap(token => {\n        this.storage.setItem('token', token)\n        .then(\n          () => {\n            console.log('Token Stored');\n          },\n          error => console.error('Error storing item', error)\n        );\n        this.token = token;\n        this.isLoggedIn = true;\n        return token;\n      }),\n    );\n  }\n  register(fName: String, lName: String, email: String, password: String) {\n    return this.http.post(this.env.API_URL + 'api/auth/register',\n      {fName: fName, lName: lName, email: email, password: password}\n    )\n  }\n  logout() {\n    const headers = new HttpHeaders({\n      'Authorization': this.token[\"token_type\"]+\" \"+this.token[\"access_token\"]\n    });\n    return this.http.get(this.env.API_URL + 'api/auth/logout', { headers: headers })\n    .pipe(\n      tap(data => {\n        this.storage.remove(\"token\");\n        this.isLoggedIn = false;\n        delete this.token;\n        return data;\n      })\n    )\n  }\n  user() {\n    const headers = new HttpHeaders({\n      'Authorization': this.token[\"token_type\"]+\" \"+this.token[\"access_token\"]\n    });\n    return this.http.get<User>(this.env.API_URL + 'api/auth/user', { headers: headers })\n    .pipe(\n      tap(user => {\n        return user;\n      })\n    )\n  }\n  getToken() {\n    return this.storage.getItem('token').then(\n      data => {\n        this.token = data;\n        if(this.token != null) {\n          this.isLoggedIn=true;\n        } else {\n          this.isLoggedIn=false;\n        }\n      },\n      error => {\n        this.token = null;\n        this.isLoggedIn=false;\n      }\n    );\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvService {\n  API_URL = 'http://api.pormibahia.org/';\n  \n  constructor() { }\n}\n"]}